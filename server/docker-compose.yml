# ========================================
# MESH HYDRO V2 - DOCKER COMPOSE
# ========================================
# 
# ‚ö†Ô∏è –í–ê–ñ–ù–û: –¢–æ–ª—å–∫–æ –°–ï–†–í–ï–†–ù–´–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã!
#
# –í Docker:
#   - Mosquitto MQTT Broker
#   - PostgreSQL Database (—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–∞—è –ë–î)
#   - Laravel Backend API
#   - MQTT Listener (PHP)
#   - Vue.js Frontend
#
# –ù–ï –≤ Docker (—Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∂–µ–ª–µ–∑–æ):
#   - ROOT Node (ESP32-S3) - –ø—Ä–æ—à–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ idf.py
#   - NODE Climate (ESP32) - –ø—Ä–æ—à–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ idf.py
#   - NODE pH/EC (ESP32-S3) - –ø—Ä–æ—à–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ idf.py
#   - –∏ –¥—Ä—É–≥–∏–µ —É–∑–ª—ã...
#
# üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ESP32:
#   - ESP32 –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ MQTT –±—Ä–æ–∫–µ—Ä—É –ø–æ IP —Ö–æ—Å—Ç–∞ –∏ –ø–æ—Ä—Ç—É 1883
#   - –í–Ω—É—Ç—Ä–∏ Docker —Å–µ—Ä–≤–∏—Å—ã –æ–±—â–∞—é—Ç—Å—è –ø–æ –∏–º–µ–Ω–∞–º (mosquitto, backend, postgres)
#   - –ü–æ—Ä—Ç 1883 –ø—Ä–æ–±—Ä–æ—à–µ–Ω –Ω–∞ —Ö–æ—Å—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ ESP32
# ========================================

services:
  # ========================================
  # PostgreSQL Database
  # –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –°–£–ë–î —Å JSONB –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
  # ========================================
  postgres:
    image: postgres:15.4-alpine
    container_name: hydro_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hydro_system
      POSTGRES_USER: hydro
      POSTGRES_PASSWORD: hydro_secure_pass_2025
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å —Ö–æ—Å—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hydro_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hydro -d hydro_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # MQTT Broker (Mosquitto)
  # –î–ª—è –ø—Ä–∏–µ–º–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç ESP32 —É–∑–ª–æ–≤
  # ========================================
  mosquitto:
    image: eclipse-mosquitto:2.0.18
    container_name: hydro_mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"     # MQTT
      - "9001:9001"     # WebSocket (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - hydro_network

  # ========================================
  # Backend (Laravel 10)
  # REST API + MQTT –æ–±—Ä–∞–±–æ—Ç–∫–∞
  # PostgreSQL –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
  # ========================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hydro_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "6001:6001"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - LOG_LEVEL=debug
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=hydro_system
      - DB_USERNAME=hydro
      - DB_PASSWORD=hydro_secure_pass_2025
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - BROADCAST_DRIVER=reverb
      - REVERB_APP_ID=hydro-app
      - REVERB_APP_KEY=hydro-app-key
      - REVERB_APP_SECRET=hydro-app-secret
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      - REVERB_SERVER_HOST=0.0.0.0
      - REVERB_SERVER_PORT=8080
    volumes:
      # –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
      # - ./backend:/var/www/html
      - backend_storage:/var/www/html/storage
    depends_on:
      postgres:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks:
      - hydro_network
    command: >
      sh -c "php artisan migrate --force &&
             php artisan reverb:start --host=0.0.0.0 --port=6001 &
             php artisan serve --host=0.0.0.0 --port=8000"

  # ========================================
  # MQTT Listener (Laravel Artisan)
  # –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç ESP32 —á–µ—Ä–µ–∑ MQTT
  # ========================================
  mqtt_listener:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hydro_mqtt_listener
    restart: unless-stopped
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - LOG_LEVEL=debug
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=hydro_system
      - DB_USERNAME=hydro
      - DB_PASSWORD=hydro_secure_pass_2025
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - BROADCAST_DRIVER=reverb
      - REVERB_APP_ID=hydro-app
      - REVERB_APP_KEY=hydro-app-key
      - REVERB_APP_SECRET=hydro-app-secret
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      - REVERB_SERVER_HOST=0.0.0.0
      - REVERB_SERVER_PORT=8080
    # volumes:
      # –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
      # - ./backend:/var/www/html
    depends_on:
      postgres:
        condition: service_healthy
      mosquitto:
        condition: service_started
      backend:
        condition: service_started
    networks:
      - hydro_network
    command: php artisan mqtt:listen

  # ========================================
  # Scheduler (Laravel Artisan)
  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ scheduled tasks
  # ========================================
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hydro_scheduler
    restart: unless-stopped
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - LOG_LEVEL=debug
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=hydro_system
      - DB_USERNAME=hydro
      - DB_PASSWORD=hydro_secure_pass_2025
      - BROADCAST_DRIVER=reverb
      - REVERB_APP_ID=hydro-app
      - REVERB_APP_KEY=hydro-app-key
      - REVERB_APP_SECRET=hydro-app-secret
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - hydro_network
    command: php artisan schedule:work

  # ========================================
  # Frontend (Vue.js 3)
  # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ESP32
  # ========================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=/api
        - VITE_WS_HOST=localhost
        - VITE_WS_PORT=8080
        - VITE_PUSHER_KEY=hydro-app-key
    container_name: hydro_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - hydro_network

  # ========================================
  # Laravel Reverb WebSocket Server
  # –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π WebSocket —Å–µ—Ä–≤–µ—Ä Laravel 11
  # ========================================
  reverb:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hydro_reverb
    restart: unless-stopped
    command: php artisan reverb:start --host=0.0.0.0 --port=8080
    ports:
      - "8080:8080"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - LOG_LEVEL=debug
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=hydro_system
      - DB_USERNAME=hydro
      - DB_PASSWORD=hydro_secure_pass_2025
      - BROADCAST_DRIVER=reverb
      - REVERB_APP_ID=hydro-app
      - REVERB_APP_KEY=hydro-app-key
      - REVERB_APP_SECRET=hydro-app-secret
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      - REVERB_SERVER_HOST=0.0.0.0
      - REVERB_SERVER_PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hydro_network
    volumes:
      - backend_storage:/var/www/html/storage

  # ========================================
  # Nginx (Reverse Proxy) - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
  # ========================================
  nginx:
    image: nginx:1.27-alpine
    container_name: hydro_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - backend
      - frontend
    networks:
      - hydro_network
    profiles:
      - production  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å --profile production

# ========================================
# Networks
# ========================================
networks:
  hydro_network:
    driver: bridge

# ========================================
# Volumes (–ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)
# ========================================
volumes:
  postgres_data:
    driver: local
  backend_storage:
    driver: local

