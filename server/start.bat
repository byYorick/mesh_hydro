@echo off
REM ========================================
REM MESH HYDRO V2 - DOCKER START SCRIPT (Windows)
REM ========================================

setlocal enabledelayedexpansion

echo üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Mesh Hydro System V2...

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
docker --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

echo [INFO] Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...

if not exist "docker-compose.yml" (
    echo [ERROR] –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist ".env" (
    echo [WARNING] .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env —Ñ–∞–π–ª...
    (
        echo # Mesh Hydro System V2 Environment
        echo APP_NAME="Mesh Hydro System"
        echo APP_ENV=production
        echo APP_KEY=base64:hydro_app_key_2025
        echo APP_DEBUG=false
        echo APP_URL=http://localhost
        echo.
        echo LOG_CHANNEL=stack
        echo LOG_DEPRECATIONS_CHANNEL=null
        echo LOG_LEVEL=info
        echo.
        echo DB_CONNECTION=pgsql
        echo DB_HOST=postgres
        echo DB_PORT=5432
        echo DB_DATABASE=hydro_system
        echo DB_USERNAME=hydro
        echo DB_PASSWORD=hydro_secure_pass_2025
        echo.
        echo BROADCAST_DRIVER=reverb
        echo CACHE_DRIVER=file
        echo FILESYSTEM_DISK=local
        echo QUEUE_CONNECTION=sync
        echo SESSION_DRIVER=file
        echo SESSION_LIFETIME=120
        echo.
        echo MEMCACHED_HOST=127.0.0.1
        echo.
        echo REDIS_HOST=127.0.0.1
        echo REDIS_PASSWORD=null
        echo REDIS_PORT=6379
        echo.
        echo MAIL_MAILER=smtp
        echo MAIL_HOST=mailpit
        echo MAIL_PORT=1025
        echo MAIL_USERNAME=null
        echo MAIL_PASSWORD=null
        echo MAIL_ENCRYPTION=null
        echo MAIL_FROM_ADDRESS="hello@example.com"
        echo MAIL_FROM_NAME="${APP_NAME}"
        echo.
        echo AWS_ACCESS_KEY_ID=
        echo AWS_SECRET_ACCESS_KEY=
        echo AWS_DEFAULT_REGION=us-east-1
        echo AWS_BUCKET=
        echo AWS_USE_PATH_STYLE_ENDPOINT=false
        echo.
        echo PUSHER_APP_ID=hydro-app
        echo PUSHER_APP_KEY=hydro-app-key
        echo PUSHER_APP_SECRET=hydro-app-secret
        echo PUSHER_HOST=reverb
        echo PUSHER_PORT=8080
        echo PUSHER_SCHEME=http
        echo PUSHER_APP_CLUSTER=mt1
        echo.
        echo VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
        echo VITE_PUSHER_HOST="${PUSHER_HOST}"
        echo VITE_PUSHER_PORT="${PUSHER_PORT}"
        echo VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
        echo VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
        echo.
        echo # MQTT Settings
        echo MQTT_HOST=mosquitto
        echo MQTT_PORT=1883
        echo MQTT_USERNAME=
        echo MQTT_PASSWORD=
        echo MQTT_CLIENT_ID=hydro_backend
        echo MQTT_TOPIC_PREFIX=hydro
        echo.
        echo # Telegram Bot
        echo TELEGRAM_BOT_TOKEN=
        echo TELEGRAM_CHAT_ID=
        echo.
        echo # Node Settings
        echo NODE_OFFLINE_TIMEOUT=300
        echo NODE_HEARTBEAT_INTERVAL=60
    ) > .env
    echo [SUCCESS] .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
) else (
    echo [INFO] .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
)

REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è volumes
echo [INFO] –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...
if not exist "mosquitto\config" mkdir mosquitto\config
if not exist "mosquitto\data" mkdir mosquitto\data
if not exist "mosquitto\log" mkdir mosquitto\log
if not exist "nginx\ssl" mkdir nginx\ssl

REM –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Mosquitto
if not exist "mosquitto\config\mosquitto.conf" (
    echo [INFO] –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Mosquitto...
    (
        echo # Mosquitto Configuration for Mesh Hydro System
        echo listener 1883
        echo allow_anonymous true
        echo persistence true
        echo persistence_location /mosquitto/data/
        echo log_dest file /mosquitto/log/mosquitto.log
        echo log_type error
        echo log_type warning
        echo log_type notice
        echo log_type information
        echo connection_messages true
        echo log_timestamp true
    ) > mosquitto\config\mosquitto.conf
    echo [SUCCESS] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Mosquitto —Å–æ–∑–¥–∞–Ω–∞
)

REM –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo [INFO] –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...
docker-compose down --remove-orphans

REM –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo [INFO] –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã...

REM –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo [INFO] –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –∏ Mosquitto...
docker-compose up -d postgres mosquitto

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo [INFO] –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL...
timeout 60 >nul 2>&1
ping -n 30 127.0.0.1 >nul 2>&1

REM –ó–∞–ø—É—Å–∫ backend
echo [INFO] –ó–∞–ø—É—Å–∫–∞–µ–º backend...
docker-compose up -d backend

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend
echo [INFO] –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend...
timeout 60 >nul 2>&1
ping -n 30 127.0.0.1 >nul 2>&1

REM –ó–∞–ø—É—Å–∫ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo [INFO] –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã...
docker-compose up -d mqtt_listener scheduler reverb frontend

REM –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ frontend
echo [INFO] –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ frontend...
timeout 60 >nul 2>&1
ping -n 30 127.0.0.1 >nul 2>&1

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤...
docker-compose ps

REM –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤...

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
docker-compose exec -T postgres pg_isready -U hydro -d hydro_system >nul 2>&1
if not errorlevel 1 (
    echo [SUCCESS] ‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω
) else (
    echo [ERROR] ‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend
curl -s http://localhost:8000/health >nul 2>&1
if not errorlevel 1 (
    echo [SUCCESS] ‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω
) else (
    echo [WARNING] ‚ö†Ô∏è Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
curl -s http://localhost:3000 >nul 2>&1
if not errorlevel 1 (
    echo [SUCCESS] ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω
) else (
    echo [WARNING] ‚ö†Ô∏è Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ MQTT
docker-compose exec -T mosquitto mosquitto_pub -h localhost -t test -m "test" >nul 2>&1
if not errorlevel 1 (
    echo [SUCCESS] ‚úÖ MQTT Broker –¥–æ—Å—Ç—É–ø–µ–Ω
) else (
    echo [WARNING] ‚ö†Ô∏è MQTT Broker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

echo [SUCCESS] –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!

echo.
echo üéâ Mesh Hydro System V2 –∑–∞–ø—É—â–µ–Ω–∞!
echo.
echo üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:
echo - Frontend: http://localhost:3000
echo - Backend API: http://localhost:8000
echo - MQTT Broker: localhost:1883
echo - PostgreSQL: localhost:5432
echo - WebSocket: ws://localhost:8080
echo.
echo üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo - –°—Ç–∞—Ç—É—Å: docker-compose ps
echo - –õ–æ–≥–∏: docker-compose logs -f
echo - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose down
echo - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose restart
echo.
echo üì± –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ http://localhost:3000
echo.
echo üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!

pause
