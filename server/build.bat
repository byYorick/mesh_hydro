@echo off
REM ========================================
REM MESH HYDRO V2 - DOCKER BUILD SCRIPT (Windows)
REM ========================================

setlocal enabledelayedexpansion

echo üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É Mesh Hydro System V2...

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
docker --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

echo [INFO] Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...

if not exist "docker-compose.yml" (
    echo [ERROR] –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

if not exist "backend\Dockerfile" (
    echo [ERROR] –§–∞–π–ª backend\Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

if not exist "frontend\Dockerfile" (
    echo [ERROR] –§–∞–π–ª frontend\Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

if not exist "nginx\conf.d\production.conf" (
    echo [ERROR] –§–∞–π–ª nginx\conf.d\production.conf –Ω–µ –Ω–∞–π–¥–µ–Ω!
    pause
    exit /b 1
)

echo [SUCCESS] –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã

REM –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo [INFO] –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã...
docker system prune -f

REM –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
echo [INFO] –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã...

echo [INFO] –°–æ–±–∏—Ä–∞–µ–º backend –æ–±—Ä–∞–∑...
docker-compose build backend --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend –æ–±—Ä–∞–∑–∞!
    pause
    exit /b 1
)

echo [INFO] –°–æ–±–∏—Ä–∞–µ–º frontend –æ–±—Ä–∞–∑...
docker-compose build frontend --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend –æ–±—Ä–∞–∑–∞!
    pause
    exit /b 1
)

echo [INFO] –°–æ–±–∏—Ä–∞–µ–º mqtt_listener –æ–±—Ä–∞–∑...
docker-compose build mqtt_listener --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ mqtt_listener –æ–±—Ä–∞–∑–∞!
    pause
    exit /b 1
)

echo [INFO] –°–æ–±–∏—Ä–∞–µ–º scheduler –æ–±—Ä–∞–∑...
docker-compose build scheduler --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ scheduler –æ–±—Ä–∞–∑–∞!
    pause
    exit /b 1
)

echo [INFO] –°–æ–±–∏—Ä–∞–µ–º reverb –æ–±—Ä–∞–∑...
docker-compose build reverb --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ reverb –æ–±—Ä–∞–∑–∞!
    pause
    exit /b 1
)

echo [SUCCESS] –í—Å–µ –æ–±—Ä–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω—ã!

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã...
docker images | findstr hydro

REM –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not exist ".env" (
    echo [INFO] –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª...
    (
        echo # Mesh Hydro System V2 Environment
        echo APP_NAME="Mesh Hydro System"
        echo APP_ENV=production
        echo APP_KEY=base64:hydro_app_key_2025
        echo APP_DEBUG=false
        echo APP_URL=http://localhost
        echo.
        echo LOG_CHANNEL=stack
        echo LOG_DEPRECATIONS_CHANNEL=null
        echo LOG_LEVEL=info
        echo.
        echo DB_CONNECTION=pgsql
        echo DB_HOST=postgres
        echo DB_PORT=5432
        echo DB_DATABASE=hydro_system
        echo DB_USERNAME=hydro
        echo DB_PASSWORD=hydro_secure_pass_2025
        echo.
        echo BROADCAST_DRIVER=reverb
        echo CACHE_DRIVER=file
        echo FILESYSTEM_DISK=local
        echo QUEUE_CONNECTION=sync
        echo SESSION_DRIVER=file
        echo SESSION_LIFETIME=120
        echo.
        echo MEMCACHED_HOST=127.0.0.1
        echo.
        echo REDIS_HOST=127.0.0.1
        echo REDIS_PASSWORD=null
        echo REDIS_PORT=6379
        echo.
        echo MAIL_MAILER=smtp
        echo MAIL_HOST=mailpit
        echo MAIL_PORT=1025
        echo MAIL_USERNAME=null
        echo MAIL_PASSWORD=null
        echo MAIL_ENCRYPTION=null
        echo MAIL_FROM_ADDRESS="hello@example.com"
        echo MAIL_FROM_NAME="${APP_NAME}"
        echo.
        echo AWS_ACCESS_KEY_ID=
        echo AWS_SECRET_ACCESS_KEY=
        echo AWS_DEFAULT_REGION=us-east-1
        echo AWS_BUCKET=
        echo AWS_USE_PATH_STYLE_ENDPOINT=false
        echo.
        echo PUSHER_APP_ID=hydro-app
        echo PUSHER_APP_KEY=hydro-app-key
        echo PUSHER_APP_SECRET=hydro-app-secret
        echo PUSHER_HOST=reverb
        echo PUSHER_PORT=8080
        echo PUSHER_SCHEME=http
        echo PUSHER_APP_CLUSTER=mt1
        echo.
        echo VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
        echo VITE_PUSHER_HOST="${PUSHER_HOST}"
        echo VITE_PUSHER_PORT="${PUSHER_PORT}"
        echo VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
        echo VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
        echo.
        echo # MQTT Settings
        echo MQTT_HOST=mosquitto
        echo MQTT_PORT=1883
        echo MQTT_USERNAME=
        echo MQTT_PASSWORD=
        echo MQTT_CLIENT_ID=hydro_backend
        echo MQTT_TOPIC_PREFIX=hydro
        echo.
        echo # Telegram Bot
        echo TELEGRAM_BOT_TOKEN=
        echo TELEGRAM_CHAT_ID=
        echo.
        echo # Node Settings
        echo NODE_OFFLINE_TIMEOUT=300
        echo NODE_HEARTBEAT_INTERVAL=60
    ) > .env
    echo [SUCCESS] .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
) else (
    echo [INFO] .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
)

REM –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è volumes
echo [INFO] –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...
if not exist "mosquitto\config" mkdir mosquitto\config
if not exist "mosquitto\data" mkdir mosquitto\data
if not exist "mosquitto\log" mkdir mosquitto\log
if not exist "nginx\ssl" mkdir nginx\ssl

REM –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Mosquitto
if not exist "mosquitto\config\mosquitto.conf" (
    echo [INFO] –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Mosquitto...
    (
        echo # Mosquitto Configuration for Mesh Hydro System
        echo listener 1883
        echo allow_anonymous true
        echo persistence true
        echo persistence_location /mosquitto/data/
        echo log_dest file /mosquitto/log/mosquitto.log
        echo log_type error
        echo log_type warning
        echo log_type notice
        echo log_type information
        echo connection_messages true
        echo log_timestamp true
    ) > mosquitto\config\mosquitto.conf
    echo [SUCCESS] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Mosquitto —Å–æ–∑–¥–∞–Ω–∞
)

REM –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø—É—Å–∫—É...

REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Windows)
netstat -an | findstr ":80 " >nul 2>&1
if not errorlevel 1 (
    echo [WARNING] –ü–æ—Ä—Ç 80 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.
)

netstat -an | findstr ":8000 " >nul 2>&1
if not errorlevel 1 (
    echo [WARNING] –ü–æ—Ä—Ç 8000 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.
)

netstat -an | findstr ":1883 " >nul 2>&1
if not errorlevel 1 (
    echo [WARNING] –ü–æ—Ä—Ç 1883 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏.
)

echo [SUCCESS] –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É!

echo.
echo üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!
echo.
echo üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
echo 1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É: docker-compose up -d
echo 2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: docker-compose ps
echo 3. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏: docker-compose logs -f
echo 4. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost
echo.
echo üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: docker-compose down
echo - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å: docker-compose restart
echo - –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ: docker-compose down -v --remove-orphans
echo.
echo üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:
echo - –õ–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose logs -f
echo - –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: docker-compose logs -f backend
echo - –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker-compose ps
echo.
echo üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!

pause
